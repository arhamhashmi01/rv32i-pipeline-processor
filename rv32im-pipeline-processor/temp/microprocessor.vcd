$date
	Mon Feb  3 18:54:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module microprocessor_tb $end
$var reg 1 ! clk $end
$var reg 32 " instruction [31:0] $end
$var reg 1 # rst $end
$scope module u_microprocessor0 $end
$var wire 1 ! clk $end
$var wire 32 $ instruction [31:0] $end
$var wire 1 # rst $end
$var wire 32 % store_data [31:0] $end
$var wire 32 & pc_address [31:0] $end
$var wire 4 ' mask [3:0] $end
$var wire 1 ( load_signal $end
$var wire 32 ) load_data_out [31:0] $end
$var wire 1 * instruction_mem_we_re $end
$var wire 1 + instruction_mem_request $end
$var wire 32 , instruction_data [31:0] $end
$var wire 1 - instruc_mem_valid $end
$var wire 4 . instruc_mask_singal [3:0] $end
$var wire 1 / data_mem_we_re $end
$var wire 1 0 data_mem_valid $end
$var wire 1 1 data_mem_request $end
$var wire 32 2 alu_out_address [31:0] $end
$scope module u_core $end
$var wire 32 3 alu_out_address [31:0] $end
$var wire 1 ! clk $end
$var wire 1 ( load_signal $end
$var wire 4 4 mask_singal [3:0] $end
$var wire 1 # rst $end
$var wire 32 5 wrap_load_wb [31:0] $end
$var wire 32 6 wrap_load_memstage [31:0] $end
$var wire 1 7 store_memstage $end
$var wire 1 8 store_execute $end
$var wire 1 9 store_decode $end
$var wire 32 : store_data_out [31:0] $end
$var wire 5 ; rs2_execute [4:0] $end
$var wire 5 < rs2_decode [4:0] $end
$var wire 5 = rs1_execute [4:0] $end
$var wire 5 > rs1_decode [4:0] $end
$var wire 1 ? reg_write_wb $end
$var wire 1 @ reg_write_memstage $end
$var wire 1 A reg_write_execute $end
$var wire 1 B reg_write_decode $end
$var wire 32 C rd_wb_data [31:0] $end
$var wire 5 D rd_wb [4:0] $end
$var wire 5 E rd_memstage [4:0] $end
$var wire 32 F pre_pc_addr_wb [31:0] $end
$var wire 32 G pre_pc_addr_memstage [31:0] $end
$var wire 32 H pre_pc_addr_fetch [31:0] $end
$var wire 32 I pre_pc_addr_execute [31:0] $end
$var wire 32 J pre_pc_addr_decode [31:0] $end
$var wire 32 K pc_address [31:0] $end
$var wire 32 L opb_mux_out_execute [31:0] $end
$var wire 32 M opb_mux_out_decode [31:0] $end
$var wire 32 N opa_mux_out_execute [31:0] $end
$var wire 32 O opa_mux_out_decode [31:0] $end
$var wire 32 P op_b_memstage [31:0] $end
$var wire 32 Q op_b_execute [31:0] $end
$var wire 32 R op_b_decode [31:0] $end
$var wire 1 S next_sel_execute $end
$var wire 1 T next_sel_decode $end
$var wire 32 U next_sel_address_wb [31:0] $end
$var wire 32 V next_sel_address_memstage [31:0] $end
$var wire 32 W next_sel_address_execute [31:0] $end
$var wire 2 X mem_to_reg_wb [1:0] $end
$var wire 2 Y mem_to_reg_memstage [1:0] $end
$var wire 2 Z mem_to_reg_execute [1:0] $end
$var wire 2 [ mem_to_reg_decode [1:0] $end
$var wire 4 \ mask [3:0] $end
$var wire 1 ] load_memstage $end
$var wire 1 ^ load_execute $end
$var wire 1 _ load_decode $end
$var wire 32 ` load_data_in [31:0] $end
$var wire 1 a jalr_execute $end
$var wire 1 b jalr_decode $end
$var wire 32 c instruction_wb [31:0] $end
$var wire 32 d instruction_memstage [31:0] $end
$var wire 1 * instruction_mem_we_re $end
$var wire 1 + instruction_mem_request $end
$var wire 32 e instruction_fetch [31:0] $end
$var wire 32 f instruction_execute [31:0] $end
$var wire 32 g instruction_decode [31:0] $end
$var wire 32 h instruction [31:0] $end
$var wire 1 - instruc_mem_valid $end
$var wire 4 i instruc_mask_singal [3:0] $end
$var wire 1 / data_mem_we_re $end
$var wire 1 0 data_mem_valid $end
$var wire 1 1 data_mem_request $end
$var wire 1 j branch_result_execute $end
$var wire 1 k branch_result_decode $end
$var wire 32 l alu_res_out_wb [31:0] $end
$var wire 32 m alu_res_out_memstage [31:0] $end
$var wire 32 n alu_res_out_execute [31:0] $end
$var wire 32 o alu_in_b [31:0] $end
$var wire 32 p alu_in_a [31:0] $end
$var wire 5 q alu_control_execute [4:0] $end
$var wire 5 r alu_control_decode [4:0] $end
$scope module u_decodepipeline $end
$var wire 5 s alu_control [4:0] $end
$var wire 1 j branch_result $end
$var wire 1 ! clk $end
$var wire 32 t instruction_out [31:0] $end
$var wire 1 a jalr_out $end
$var wire 1 ^ load $end
$var wire 2 u mem_to_reg [1:0] $end
$var wire 1 S next_sel $end
$var wire 32 v opa_mux_out [31:0] $end
$var wire 32 w opb_data_out [31:0] $end
$var wire 32 x opb_mux_out [31:0] $end
$var wire 32 y pre_address_out [31:0] $end
$var wire 1 A reg_write_out $end
$var wire 5 z rs1_out [4:0] $end
$var wire 5 { rs2_out [4:0] $end
$var wire 1 # rst $end
$var wire 1 8 store $end
$var wire 1 9 store_in $end
$var wire 5 | rs2_in [4:0] $end
$var wire 5 } rs1_in [4:0] $end
$var wire 1 B reg_write_in $end
$var wire 32 ~ pre_address_in [31:0] $end
$var wire 32 !" opb_mux_in [31:0] $end
$var wire 32 "" opb_data_in [31:0] $end
$var wire 32 #" opa_mux_in [31:0] $end
$var wire 1 T next_sel_in $end
$var wire 2 $" mem_to_reg_in [1:0] $end
$var wire 1 _ load_in $end
$var wire 1 b jalr_in $end
$var wire 32 %" instruction_in [31:0] $end
$var wire 1 k branch_result_in $end
$var wire 5 &" alu_control_in [4:0] $end
$var reg 5 '" alu_con [4:0] $end
$var reg 1 (" branch_res $end
$var reg 32 )" instruction [31:0] $end
$var reg 1 *" jalr $end
$var reg 1 +" l $end
$var reg 2 ," mem_reg [1:0] $end
$var reg 1 -" nextsel $end
$var reg 32 ." opa_mux [31:0] $end
$var reg 32 /" opb_data [31:0] $end
$var reg 32 0" opb_mux [31:0] $end
$var reg 32 1" pre_address [31:0] $end
$var reg 1 2" reg_write $end
$var reg 5 3" rs1 [4:0] $end
$var reg 5 4" rs2 [4:0] $end
$var reg 1 5" s $end
$upscope $end
$scope module u_decodestage $end
$var wire 1 ! clk $end
$var wire 1 ^ load_control_signal $end
$var wire 32 6" opb_data [31:0] $end
$var wire 1 # rst $end
$var wire 1 0 valid $end
$var wire 32 7" uj_immo [31:0] $end
$var wire 32 8" u_immo [31:0] $end
$var wire 1 9 store $end
$var wire 32 9" sb_immo [31:0] $end
$var wire 32 :" s_immo [31:0] $end
$var wire 5 ;" rs2 [4:0] $end
$var wire 5 <" rs1 [4:0] $end
$var wire 1 B reg_write_en_out $end
$var wire 1 ? reg_write_en_in $end
$var wire 32 =" rd_wb_data [31:0] $end
$var wire 32 >" pc_address [31:0] $end
$var wire 1 ?" operand_b $end
$var wire 1 @" operand_a $end
$var wire 32 A" opb_mux_out [31:0] $end
$var wire 32 B" opa_mux_out [31:0] $end
$var wire 32 C" op_b [31:0] $end
$var wire 32 D" op_a [31:0] $end
$var wire 1 T next_sel $end
$var wire 2 E" mem_to_reg [1:0] $end
$var wire 1 _ load $end
$var wire 1 b jalr $end
$var wire 32 F" instruction_rd [31:0] $end
$var wire 32 G" instruction [31:0] $end
$var wire 3 H" imm_sel [2:0] $end
$var wire 32 I" imm_mux_out [31:0] $end
$var wire 32 J" i_immo [31:0] $end
$var wire 1 k branch_result $end
$var wire 1 K" branch $end
$var wire 5 L" alu_control [4:0] $end
$scope module u_branch0 $end
$var wire 3 M" fun3 [2:0] $end
$var wire 32 N" op_b [31:0] $end
$var wire 32 O" op_a [31:0] $end
$var wire 1 K" en $end
$var reg 1 k result $end
$upscope $end
$scope module u_cu0 $end
$var wire 3 P" fun3 [2:0] $end
$var wire 7 Q" fun7 [6:0] $end
$var wire 1 ^ load_control $end
$var wire 7 R" opcode [6:0] $end
$var wire 1 0 valid $end
$var wire 1 S" store $end
$var wire 1 B reg_write $end
$var wire 1 T" r_type $end
$var wire 1 ?" operand_b $end
$var wire 1 @" operand_a $end
$var wire 1 T next_sel $end
$var wire 2 U" mem_to_reg [1:0] $end
$var wire 1 V" mem_en $end
$var wire 1 W" lui $end
$var wire 1 X" load $end
$var wire 1 b jalr_out $end
$var wire 1 Y" jalr $end
$var wire 1 Z" jal $end
$var wire 3 [" imm_sel [2:0] $end
$var wire 1 \" i_type $end
$var wire 1 ]" branch $end
$var wire 1 ^" auipc $end
$var wire 5 _" alu_control [4:0] $end
$var wire 1 9 Store $end
$var wire 1 _ Load $end
$var wire 1 K" Branch $end
$scope module u_controldec0 $end
$var wire 3 `" fun3 [2:0] $end
$var wire 7 a" fun7 [6:0] $end
$var wire 1 ^ load_control $end
$var wire 1 S" store $end
$var wire 1 T" r_type $end
$var wire 1 W" lui $end
$var wire 1 X" load $end
$var wire 1 Y" jalr $end
$var wire 1 Z" jal $end
$var wire 1 \" i_type $end
$var wire 1 b" fun_7 $end
$var wire 1 ]" branch $end
$var wire 1 ^" auipc $end
$var reg 1 K" Branch $end
$var reg 1 _ Load $end
$var reg 1 9 Store $end
$var reg 5 c" alu_control [4:0] $end
$var reg 3 d" imm_sel [2:0] $end
$var reg 1 b jalr_out $end
$var reg 1 V" mem_en $end
$var reg 2 e" mem_to_reg [1:0] $end
$var reg 1 T next_sel $end
$var reg 1 @" operand_a $end
$var reg 1 ?" operand_b $end
$var reg 1 B reg_write $end
$upscope $end
$scope module u_typedec0 $end
$var wire 1 ^ load_signal_controller $end
$var wire 7 f" opcode [6:0] $end
$var wire 1 0 valid $end
$var reg 1 ^" auipc $end
$var reg 1 ]" branch $end
$var reg 1 \" i_type $end
$var reg 1 Z" jal $end
$var reg 1 Y" jalr $end
$var reg 1 X" load $end
$var reg 1 W" lui $end
$var reg 1 T" r_type $end
$var reg 1 S" store $end
$upscope $end
$upscope $end
$scope module u_imm_gen0 $end
$var wire 32 g" instr [31:0] $end
$var reg 32 h" i_imme [31:0] $end
$var reg 32 i" s_imme [31:0] $end
$var reg 32 j" sb_imme [31:0] $end
$var reg 32 k" u_imme [31:0] $end
$var reg 32 l" uj_imme [31:0] $end
$upscope $end
$scope module u_mux0 $end
$var wire 32 m" a [31:0] $end
$var wire 32 n" b [31:0] $end
$var wire 32 o" c [31:0] $end
$var wire 32 p" d [31:0] $end
$var wire 32 q" e [31:0] $end
$var wire 32 r" f [31:0] $end
$var wire 32 s" g [31:0] $end
$var wire 32 t" h [31:0] $end
$var wire 3 u" sel [2:0] $end
$var reg 32 v" out [31:0] $end
$upscope $end
$scope module u_mux1 $end
$var wire 1 @" sel $end
$var wire 32 w" out [31:0] $end
$var wire 32 x" b [31:0] $end
$var wire 32 y" a [31:0] $end
$upscope $end
$scope module u_mux2 $end
$var wire 32 z" b [31:0] $end
$var wire 1 ?" sel $end
$var wire 32 {" out [31:0] $end
$var wire 32 |" a [31:0] $end
$upscope $end
$scope module u_regfile0 $end
$var wire 1 ! clk $end
$var wire 5 }" rd [4:0] $end
$var wire 5 ~" rs1 [4:0] $end
$var wire 5 !# rs2 [4:0] $end
$var wire 1 # rst $end
$var wire 32 "# op_b [31:0] $end
$var wire 32 ## op_a [31:0] $end
$var wire 1 ? en $end
$var wire 32 $# data [31:0] $end
$var integer 32 %# i [31:0] $end
$upscope $end
$upscope $end
$scope module u_executepipeline $end
$var wire 1 ! clk $end
$var wire 32 &# instruction_in [31:0] $end
$var wire 32 '# instruction_out [31:0] $end
$var wire 1 ^ load_in $end
$var wire 1 ] load_out $end
$var wire 2 (# mem_reg_in [1:0] $end
$var wire 2 )# mem_reg_out [1:0] $end
$var wire 32 *# next_sel_address [31:0] $end
$var wire 32 +# opb_datain [31:0] $end
$var wire 32 ,# opb_dataout [31:0] $end
$var wire 32 -# pre_address_in [31:0] $end
$var wire 32 .# pre_address_out [31:0] $end
$var wire 1 A reg_write_in $end
$var wire 1 @ reg_write_out $end
$var wire 1 # rst $end
$var wire 1 8 store_in $end
$var wire 1 7 store_out $end
$var wire 32 /# next_sel_addr [31:0] $end
$var wire 32 0# alu_res_out [31:0] $end
$var wire 32 1# alu_res [31:0] $end
$var reg 32 2# alu_result [31:0] $end
$var reg 32 3# instruction [31:0] $end
$var reg 1 ] load $end
$var reg 2 4# mem_reg [1:0] $end
$var reg 32 5# nextsel_addr [31:0] $end
$var reg 32 6# opb_data [31:0] $end
$var reg 32 7# pre_address [31:0] $end
$var reg 1 8# reg_write $end
$var reg 1 9# store $end
$upscope $end
$scope module u_executestage $end
$var wire 32 :# a_i [31:0] $end
$var wire 5 ;# alu_control [4:0] $end
$var wire 32 <# b_i [31:0] $end
$var wire 32 =# pc_address [31:0] $end
$var wire 32 ># next_sel_address [31:0] $end
$var wire 32 ?# alu_res_out [31:0] $end
$scope module u_adder0 $end
$var wire 32 @# a [31:0] $end
$var reg 32 A# adder_out [31:0] $end
$upscope $end
$scope module u_alu0 $end
$var wire 32 B# a_i [31:0] $end
$var wire 32 C# b_i [31:0] $end
$var wire 5 D# op_i [4:0] $end
$var reg 64 E# res_64 [63:0] $end
$var reg 32 F# res_o [31:0] $end
$upscope $end
$upscope $end
$scope module u_fetchpipeline $end
$var wire 1 k branch_result $end
$var wire 1 ! clk $end
$var wire 32 G# instruction [31:0] $end
$var wire 1 b jalr $end
$var wire 1 _ load $end
$var wire 1 T next_select $end
$var wire 32 H# pre_address_out [31:0] $end
$var wire 1 # rst $end
$var wire 32 I# pre_address_pc [31:0] $end
$var wire 32 J# instruction_fetch [31:0] $end
$var reg 1 K# flush_pipeline $end
$var reg 1 L# flush_pipeline2 $end
$var reg 32 M# instruc [31:0] $end
$var reg 32 N# pre_address [31:0] $end
$upscope $end
$scope module u_fetchstage $end
$var wire 32 O# address_in [31:0] $end
$var wire 1 j branch_reselt $end
$var wire 1 ! clk $end
$var wire 1 a jalr $end
$var wire 1 _ load $end
$var wire 32 P# next_address [31:0] $end
$var wire 1 S next_sel $end
$var wire 1 # rst $end
$var wire 1 0 valid $end
$var wire 32 Q# pre_address_pc [31:0] $end
$var wire 32 R# instruction_fetch [31:0] $end
$var wire 32 S# address_out [31:0] $end
$var reg 32 T# instruction [31:0] $end
$var reg 4 U# mask [3:0] $end
$var reg 1 + request $end
$var reg 1 * we_re $end
$scope module u_pc0 $end
$var wire 32 V# address_in [31:0] $end
$var wire 1 j branch_reselt $end
$var wire 1 ! clk $end
$var wire 1 a jalr $end
$var wire 1 _ load $end
$var wire 32 W# next_address [31:0] $end
$var wire 1 S next_sel $end
$var wire 32 X# pre_address_pc [31:0] $end
$var wire 1 # rst $end
$var wire 1 0 dmem_valid $end
$var reg 32 Y# address_out [31:0] $end
$var reg 32 Z# pre_address [31:0] $end
$upscope $end
$upscope $end
$scope module u_memorystage $end
$var wire 32 [# alu_out_address [31:0] $end
$var wire 32 \# instruction [31:0] $end
$var wire 1 ] load $end
$var wire 32 ]# op_b [31:0] $end
$var wire 1 # rst $end
$var wire 1 7 store $end
$var wire 32 ^# wrap_load_out [31:0] $end
$var wire 32 _# wrap_load_in [31:0] $end
$var wire 1 - valid $end
$var wire 32 `# store_data_out [31:0] $end
$var wire 4 a# mask [3:0] $end
$var wire 1 0 data_valid $end
$var reg 1 1 request $end
$var reg 1 / we_re $end
$scope module u_wrap_mem0 $end
$var wire 1 ] Load $end
$var wire 2 b# byteadd [1:0] $end
$var wire 32 c# data_i [31:0] $end
$var wire 3 d# fun3 [2:0] $end
$var wire 1 7 mem_en $end
$var wire 32 e# wrap_load_in [31:0] $end
$var wire 1 0 data_valid $end
$var reg 32 f# data_o [31:0] $end
$var reg 4 g# masking [3:0] $end
$var reg 32 h# wrap_load_out [31:0] $end
$upscope $end
$upscope $end
$scope module u_memstagepipeline $end
$var wire 32 i# alu_res [31:0] $end
$var wire 1 ! clk $end
$var wire 32 j# instruction_in [31:0] $end
$var wire 32 k# instruction_out [31:0] $end
$var wire 2 l# mem_reg_in [1:0] $end
$var wire 2 m# mem_reg_out [1:0] $end
$var wire 32 n# next_sel_addr [31:0] $end
$var wire 32 o# next_sel_address [31:0] $end
$var wire 32 p# pre_address_in [31:0] $end
$var wire 32 q# pre_address_out [31:0] $end
$var wire 1 @ reg_write_in $end
$var wire 1 ? reg_write_out $end
$var wire 1 r# rst $end
$var wire 32 s# wrap_load_in [31:0] $end
$var wire 32 t# wrap_load_out [31:0] $end
$var wire 32 u# alu_res_out [31:0] $end
$var reg 32 v# alu_result [31:0] $end
$var reg 32 w# instruction [31:0] $end
$var reg 2 x# mem_reg [1:0] $end
$var reg 32 y# nextsel_addr [31:0] $end
$var reg 32 z# pre_address_pc [31:0] $end
$var reg 1 {# reg_write $end
$var reg 32 |# wrap_load [31:0] $end
$upscope $end
$scope module u_wbstage $end
$var wire 32 }# alu_out [31:0] $end
$var wire 32 ~# data_mem_out [31:0] $end
$var wire 2 !$ mem_to_reg [1:0] $end
$var wire 32 "$ next_sel_address [31:0] $end
$var wire 32 #$ rd_sel_mux_out [31:0] $end
$scope module u_mux2 $end
$var wire 32 $$ a [31:0] $end
$var wire 32 %$ b [31:0] $end
$var wire 32 &$ c [31:0] $end
$var wire 32 '$ d [31:0] $end
$var wire 2 ($ sel [1:0] $end
$var reg 32 )$ out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_data_memory $end
$var wire 8 *$ address [7:0] $end
$var wire 1 ! clk $end
$var wire 32 +$ data_in [31:0] $end
$var wire 1 ( load $end
$var wire 4 ,$ mask [3:0] $end
$var wire 1 1 request $end
$var wire 1 # rst $end
$var wire 1 / we_re $end
$var wire 32 -$ data_out [31:0] $end
$var reg 1 0 valid $end
$scope module u_memory $end
$var wire 8 .$ address [7:0] $end
$var wire 1 ! clk $end
$var wire 32 /$ data_in [31:0] $end
$var wire 4 0$ mask [3:0] $end
$var wire 1 1 request $end
$var wire 1 / we_re $end
$var reg 32 1$ data_out [31:0] $end
$upscope $end
$upscope $end
$scope module u_instruction_memory $end
$var wire 8 2$ address [7:0] $end
$var wire 1 ! clk $end
$var wire 32 3$ data_in [31:0] $end
$var wire 4 4$ mask [3:0] $end
$var wire 1 + request $end
$var wire 1 # rst $end
$var wire 1 * we_re $end
$var wire 32 5$ data_out [31:0] $end
$var reg 1 - valid $end
$scope module u_memory $end
$var wire 8 6$ address [7:0] $end
$var wire 1 ! clk $end
$var wire 32 7$ data_in [31:0] $end
$var wire 4 8$ mask [3:0] $end
$var wire 1 + request $end
$var wire 1 * we_re $end
$var reg 32 9$ data_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 9$
bx 8$
bx 7$
bx 6$
bx 5$
bx 4$
bx 3$
bx 2$
bx 1$
bx 0$
bx /$
bx .$
bx -$
bx ,$
bx +$
bx *$
bx )$
bx ($
bz '$
bx &$
bx %$
bx $$
bx #$
bx "$
bx !$
bx ~#
bx }#
bx |#
x{#
bx z#
bx y#
bx x#
bx w#
bx v#
bx u#
bx t#
bx s#
zr#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
bx k#
bx j#
bx i#
bx h#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
bx ]#
bx \#
bx [#
bx Z#
bx Y#
bx X#
bx W#
b0 V#
bx U#
bx T#
bx S#
bx R#
bx Q#
bx P#
b0 O#
bx N#
bx M#
xL#
xK#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
x9#
x8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bz t"
bz s"
bz r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
xb"
bx a"
bx `"
bx _"
x^"
x]"
x\"
bx ["
xZ"
xY"
xX"
xW"
xV"
bx U"
xT"
xS"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
xK"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
x@"
x?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
x5"
bx 4"
bx 3"
x2"
bx 1"
bx 0"
bx /"
bx ."
x-"
bx ,"
x+"
x*"
bx )"
x("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
xk
xj
bx i
bx h
bx g
bx f
bx e
bx d
bx c
xb
xa
bx `
x_
x^
x]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
xT
xS
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
xB
xA
x@
x?
bx >
bx =
bx <
bx ;
bx :
x9
x8
x7
bx 6
bx 5
bx 4
bx 3
bx 2
x1
x0
x/
bx .
x-
bx ,
x+
x*
bx )
x(
bx '
bx &
bx %
bx $
1#
bx "
0!
$end
#5000
1!
#10000
b0 n
b0 1#
b0 ?#
b0 F#
b0 P#
b0 W#
b0 M
b0 !"
b0 A"
b0 {"
b0 O
b0 #"
b0 B"
b0 w"
0k
b0 R
b0 ""
b0 6"
b0 C"
b0 N"
b0 |"
b0 "#
b0 D"
b0 O"
b0 y"
b0 ##
0b"
1+
0*
b1111 .
b1111 i
b1111 U#
b1111 4$
b1111 8$
b0 b#
b0 o
b0 <#
b0 C#
b0 p
b0 :#
b0 B#
b0 *$
b0 .$
b0 d#
b0 E
b100 W
b100 /#
b100 >#
b100 A#
0V"
0b
0T
0K"
09
0_
0?"
0@"
0B
0W"
0Y"
0Z"
0^"
0]"
0X"
0S"
0\"
0T"
b0 M"
b0 <
b0 |
b0 ;"
b0 >
b0 }
b0 <"
b0 !#
b0 ~"
b0 Q"
b0 a"
b0 P"
b0 `"
b0 R"
b0 f"
b0 8"
b0 k"
b0 q"
b0 7"
b0 l"
b0 p"
b0 9"
b0 j"
b0 o"
b0 :"
b0 i"
b0 n"
b0 J"
b0 h"
b0 m"
b0 2$
b0 6$
0/
01
00
0@
08#
b0 V
b0 *#
b0 n#
b0 5#
b0 2
b0 3
b0 m
b0 0#
b0 2#
b0 [#
b0 i#
b0 d
b0 '#
b0 3#
b0 \#
b0 j#
b0 G
b0 .#
b0 p#
b0 7#
b0 P
b0 ,#
b0 ]#
b0 c#
b0 6#
b0 Y
b0 )#
b0 l#
b0 4#
07
09#
0(
0]
b0 ;
b0 {
b0 4"
b0 =
b0 z
b0 3"
0A
02"
b0 f
b0 t
b0 &#
b0 )"
b0 I
b0 y
b0 -#
b0 =#
b0 @#
b0 1"
b0 Q
b0 w
b0 +#
b0 /"
b0 L
b0 x
b0 0"
b0 N
b0 v
b0 ."
b0 q
b0 s
b0 ;#
b0 D#
b0 '"
b0 Z
b0 u
b0 (#
b0 ,"
0j
0("
0S
0-"
0a
0*"
08
05"
0^
0+"
0K#
b0 g
b0 %"
b0 G"
b0 g"
b0 G#
b0 M#
b0 J
b0 ~
b0 >"
b0 x"
b0 H#
b0 N#
b0 &
b0 K
b0 S#
b0 Y#
0-
b100000 %#
0!
0#
#15000
b0 }"
b0 D
b0 C
b0 ="
b0 $#
b0 #$
b0 )$
b1011101110000000000000010010011 e
b1011101110000000000000010010011 J#
b1011101110000000000000010010011 T#
b0 H
b0 I#
b0 Q#
b0 X#
b0 Z#
b0 F
b0 q#
b0 z#
0?
0{#
b0 c
b0 F"
b0 k#
b0 w#
b0 U
b0 o#
b0 "$
b0 &$
b0 y#
b0 l
b0 u#
b0 v#
b0 }#
b0 $$
b0 X
b0 m#
b0 !$
b0 ($
b0 x#
b1011101110000000000000010010011 ,
b1011101110000000000000010010011 h
b1011101110000000000000010010011 R#
b1011101110000000000000010010011 5$
b1011101110000000000000010010011 9$
b100000 %#
1!
#20000
0!
1#
#25000
b10111011100 I"
b10111011100 v"
b10111011100 z"
b10111011100 M
b10111011100 !"
b10111011100 A"
b10111011100 {"
b0 r
b0 &"
b0 L"
b0 _"
b0 c"
b0 [
b0 $"
b0 E"
b0 U"
b0 e"
b0 H"
b0 ["
b0 d"
b0 u"
1?"
1B
1b"
1\"
b11100 <
b11100 |
b11100 ;"
b11100 !#
b101110 Q"
b101110 a"
b10011 R"
b10011 f"
b1011101110000000000000000000000 8"
b1011101110000000000000000000000 k"
b1011101110000000000000000000000 q"
b10111011100 7"
b10111011100 l"
b10111011100 p"
b110111000000 9"
b110111000000 j"
b110111000000 o"
b10111000001 :"
b10111000001 i"
b10111000001 n"
b10111011100 J"
b10111011100 h"
b10111011100 m"
b1 2$
b1 6$
b100 V
b100 *#
b100 n#
b100 5#
bx q
bx s
bx ;#
bx D#
bx '"
bx Z
bx u
bx (#
bx ,"
b1011101110000000000000010010011 g
b1011101110000000000000010010011 %"
b1011101110000000000000010010011 G"
b1011101110000000000000010010011 g"
b1011101110000000000000010010011 G#
b1011101110000000000000010010011 M#
b100 &
b100 K
b100 S#
b100 Y#
1-
1!
#30000
0!
#35000
b10111011100 n
b10111011100 1#
b10111011100 ?#
b10111011100 F#
b10111011100 P#
b10111011100 W#
b10111011100 o
b10111011100 <#
b10111011100 C#
b10 2$
b10 6$
b1111111111100000000000100010011 e
b1111111111100000000000100010011 J#
b1111111111100000000000100010011 T#
b1000 &
b1000 K
b1000 S#
b1000 Y#
b100 H
b100 I#
b100 Q#
b100 X#
b100 Z#
b11100 ;
b11100 {
b11100 4"
1A
12"
b1011101110000000000000010010011 f
b1011101110000000000000010010011 t
b1011101110000000000000010010011 &#
b1011101110000000000000010010011 )"
b10111011100 L
b10111011100 x
b10111011100 0"
b0 q
b0 s
b0 ;#
b0 D#
b0 '"
b0 Z
b0 u
b0 (#
b0 ,"
bx Y
bx )#
bx l#
bx 4#
b100 U
b100 o#
b100 "$
b100 &$
b100 y#
b1111111111100000000000100010011 ,
b1111111111100000000000100010011 h
b1111111111100000000000100010011 R#
b1111111111100000000000100010011 5$
b1111111111100000000000100010011 9$
1!
#40000
0!
#45000
b11111111111 M
b11111111111 !"
b11111111111 A"
b11111111111 {"
b11111111111 I"
b11111111111 v"
b11111111111 z"
b1110111 *$
b1110111 .$
b1 E
b11111 <
b11111 |
b11111 ;"
b11111 !#
b111111 Q"
b111111 a"
b1111111111100000000000000000000 8"
b1111111111100000000000000000000 k"
b1111111111100000000000000000000 q"
b111111111110 7"
b111111111110 l"
b111111111110 p"
b11111100010 9"
b11111100010 j"
b11111100010 o"
b11111100010 :"
b11111100010 i"
b11111100010 n"
b11111111111 J"
b11111111111 h"
b11111111111 m"
b11 2$
b11 6$
b10001000001000000110110011 e
b10001000001000000110110011 J#
b10001000001000000110110011 T#
1@
18#
b10111011100 2
b10111011100 3
b10111011100 m
b10111011100 0#
b10111011100 2#
b10111011100 [#
b10111011100 i#
b1011101110000000000000010010011 d
b1011101110000000000000010010011 '#
b1011101110000000000000010010011 3#
b1011101110000000000000010010011 \#
b1011101110000000000000010010011 j#
b0 Y
b0 )#
b0 l#
b0 4#
b1111111111100000000000100010011 g
b1111111111100000000000100010011 %"
b1111111111100000000000100010011 G"
b1111111111100000000000100010011 g"
b1111111111100000000000100010011 G#
b1111111111100000000000100010011 M#
b100 J
b100 ~
b100 >"
b100 x"
b100 H#
b100 N#
b1100 &
b1100 K
b1100 S#
b1100 Y#
b1000 H
b1000 I#
b1000 Q#
b1000 X#
b1000 Z#
b10001000001000000110110011 ,
b10001000001000000110110011 h
b10001000001000000110110011 R#
b10001000001000000110110011 5$
b10001000001000000110110011 9$
bx X
bx m#
bx !$
bx ($
bx x#
1!
#50000
0!
#55000
b0 M
b0 !"
b0 A"
b0 {"
b11111111111 n
b11111111111 1#
b11111111111 ?#
b11111111111 F#
b11111111111 P#
b11111111111 W#
b10000 r
b10000 &"
b10000 L"
b10000 _"
b10000 c"
0?"
0b"
1T"
0\"
b100010 I"
b100010 v"
b100010 z"
b11111111111 o
b11111111111 <#
b11111111111 C#
b0 p
b0 :#
b0 B#
b100 2$
b100 6$
b10 <
b10 |
b10 ;"
b1 >
b1 }
b1 <"
b10 !#
b1 ~"
b1 Q"
b1 a"
b110011 R"
b110011 f"
b10001000001000000000000000 8"
b10001000001000000000000000 k"
b10001000001000000000000000 q"
b1000000000100010 7"
b1000000000100010 l"
b1000000000100010 p"
b100000100010 9"
b100000100010 j"
b100000100010 o"
b100011 :"
b100011 i"
b100011 n"
b100010 J"
b100010 h"
b100010 m"
b1000 W
b1000 /#
b1000 >#
b1000 A#
b1 }"
b1 D
b10111011100 C
b10111011100 ="
b10111011100 $#
b10111011100 #$
b10111011100 )$
b10001100011001001000110011 e
b10001100011001001000110011 J#
b10001100011001001000110011 T#
b10000 &
b10000 K
b10000 S#
b10000 Y#
b1100 H
b1100 I#
b1100 Q#
b1100 X#
b1100 Z#
b10001000001000000110110011 g
b10001000001000000110110011 %"
b10001000001000000110110011 G"
b10001000001000000110110011 g"
b10001000001000000110110011 G#
b10001000001000000110110011 M#
b1000 J
b1000 ~
b1000 >"
b1000 x"
b1000 H#
b1000 N#
b11111 ;
b11111 {
b11111 4"
b1111111111100000000000100010011 f
b1111111111100000000000100010011 t
b1111111111100000000000100010011 &#
b1111111111100000000000100010011 )"
b100 I
b100 y
b100 -#
b100 =#
b100 @#
b100 1"
b11111111111 L
b11111111111 x
b11111111111 0"
1?
1{#
b1011101110000000000000010010011 c
b1011101110000000000000010010011 F"
b1011101110000000000000010010011 k#
b1011101110000000000000010010011 w#
b10111011100 l
b10111011100 u#
b10111011100 v#
b10111011100 }#
b10111011100 $$
b0 X
b0 m#
b0 !$
b0 ($
b0 x#
b10001100011001001000110011 ,
b10001100011001001000110011 h
b10001100011001001000110011 R#
b10001100011001001000110011 5$
b10001100011001001000110011 9$
1!
#60000
0!
#65000
b10001 r
b10001 &"
b10001 L"
b10001 _"
b10001 c"
b100011 I"
b100011 v"
b100011 z"
b11 b#
b11111111 *$
b11111111 .$
b10 E
b10111011100 p
b10111011100 :#
b10111011100 B#
b1100 W
b1100 /#
b1100 >#
b1100 A#
b1011101101101000100100 n
b1011101101101000100100 1#
b1011101101101000100100 ?#
b1011101101101000100100 F#
b1011101101101000100100 P#
b1011101101101000100100 W#
b1011101101101000100100 E#
b1 M"
b11 <
b11 |
b11 ;"
b11 >
b11 }
b11 <"
b11 !#
b11 ~"
b1 P"
b1 `"
b10001100011001000000000000 8"
b10001100011001000000000000 k"
b10001100011001000000000000 q"
b11001100000100010 7"
b11001100000100010 l"
b11001100000100010 p"
b100100 9"
b100100 j"
b100100 o"
b100100 :"
b100100 i"
b100100 n"
b100011 J"
b100011 h"
b100011 m"
b101 2$
b101 6$
b10001000011010001010110011 e
b10001000011010001010110011 J#
b10001000011010001010110011 T#
b1000 V
b1000 *#
b1000 n#
b1000 5#
b11111111111 2
b11111111111 3
b11111111111 m
b11111111111 0#
b11111111111 2#
b11111111111 [#
b11111111111 i#
b1111111111100000000000100010011 d
b1111111111100000000000100010011 '#
b1111111111100000000000100010011 3#
b1111111111100000000000100010011 \#
b1111111111100000000000100010011 j#
b100 G
b100 .#
b100 p#
b100 7#
b10 ;
b10 {
b10 4"
b1 =
b1 z
b1 3"
b10001000001000000110110011 f
b10001000001000000110110011 t
b10001000001000000110110011 &#
b10001000001000000110110011 )"
b1000 I
b1000 y
b1000 -#
b1000 =#
b1000 @#
b1000 1"
b0 L
b0 x
b0 0"
b10000 q
b10000 s
b10000 ;#
b10000 D#
b10000 '"
b10001100011001001000110011 g
b10001100011001001000110011 %"
b10001100011001001000110011 G"
b10001100011001001000110011 g"
b10001100011001001000110011 G#
b10001100011001001000110011 M#
b1100 J
b1100 ~
b1100 >"
b1100 x"
b1100 H#
b1100 N#
b10100 &
b10100 K
b10100 S#
b10100 Y#
b10000 H
b10000 I#
b10000 Q#
b10000 X#
b10000 Z#
b10001000011010001010110011 ,
b10001000011010001010110011 h
b10001000011010001010110011 R#
b10001000011010001010110011 5$
b10001000011010001010110011 9$
1!
#70000
0!
#75000
b10010 r
b10010 &"
b10010 L"
b10010 _"
b10010 c"
b100010 I"
b100010 v"
b100010 z"
b1011101101101000100100 p
b1011101101101000100100 :#
b1011101101101000100100 B#
b110 2$
b110 6$
b10 M"
b10 <
b10 |
b10 ;"
b10 !#
b10 P"
b10 `"
b10001000011010000000000000 8"
b10001000011010000000000000 k"
b10001000011010000000000000 q"
b11010000000100010 7"
b11010000000100010 l"
b11010000000100010 p"
b100000100100 9"
b100000100100 j"
b100000100100 o"
b100101 :"
b100101 i"
b100101 n"
b100010 J"
b100010 h"
b100010 m"
b10000 W
b10000 /#
b10000 >#
b10000 A#
b100010010011 n
b100010010011 1#
b100010010011 ?#
b100010010011 F#
b100010010011 P#
b100010010011 W#
b10001001001100011110110100010101010100010000 E#
b0 b#
b1011101101101000100100 o
b1011101101101000100100 <#
b1011101101101000100100 C#
b10001001 *$
b10001001 .$
b11 E
b10 }"
b10 D
b11111111111 C
b11111111111 ="
b11111111111 $#
b11111111111 #$
b11111111111 )$
b10001000011011001100110011 e
b10001000011011001100110011 J#
b10001000011011001100110011 T#
b11000 &
b11000 K
b11000 S#
b11000 Y#
b10100 H
b10100 I#
b10100 Q#
b10100 X#
b10100 Z#
b10001000011010001010110011 g
b10001000011010001010110011 %"
b10001000011010001010110011 G"
b10001000011010001010110011 g"
b10001000011010001010110011 G#
b10001000011010001010110011 M#
b10000 J
b10000 ~
b10000 >"
b10000 x"
b10000 H#
b10000 N#
b11 ;
b11 {
b11 4"
b11 =
b11 z
b11 3"
b10001100011001001000110011 f
b10001100011001001000110011 t
b10001100011001001000110011 &#
b10001100011001001000110011 )"
b1100 I
b1100 y
b1100 -#
b1100 =#
b1100 @#
b1100 1"
b10001 q
b10001 s
b10001 ;#
b10001 D#
b10001 '"
b1100 V
b1100 *#
b1100 n#
b1100 5#
b1011101101101000100100 2
b1011101101101000100100 3
b1011101101101000100100 m
b1011101101101000100100 0#
b1011101101101000100100 2#
b1011101101101000100100 [#
b1011101101101000100100 i#
b10001000001000000110110011 d
b10001000001000000110110011 '#
b10001000001000000110110011 3#
b10001000001000000110110011 \#
b10001000001000000110110011 j#
b1000 G
b1000 .#
b1000 p#
b1000 7#
b100 F
b100 q#
b100 z#
b1111111111100000000000100010011 c
b1111111111100000000000100010011 F"
b1111111111100000000000100010011 k#
b1111111111100000000000100010011 w#
b1000 U
b1000 o#
b1000 "$
b1000 &$
b1000 y#
b11111111111 l
b11111111111 u#
b11111111111 v#
b11111111111 }#
b11111111111 $$
b10001000011011001100110011 ,
b10001000011011001100110011 h
b10001000011011001100110011 R#
b10001000011011001100110011 5$
b10001000011011001100110011 9$
1!
#80000
0!
#85000
b0 n
b0 1#
b0 ?#
b0 F#
b0 P#
b0 W#
b0 E#
b11111111111 M
b11111111111 !"
b11111111111 A"
b11111111111 {"
b10011 r
b10011 &"
b10011 L"
b10011 _"
b10011 c"
b11 b#
b1011101101101000100100 p
b1011101101101000100100 :#
b1011101101101000100100 B#
b100100 *$
b100100 .$
b1 d#
b100 E
b0 o
b0 <#
b0 C#
b10100 W
b10100 /#
b10100 >#
b10100 A#
b11111111111 R
b11111111111 ""
b11111111111 6"
b11111111111 C"
b11111111111 N"
b11111111111 |"
b11111111111 "#
b11 M"
b11 P"
b11 `"
b10001000011011000000000000 8"
b10001000011011000000000000 k"
b10001000011011000000000000 q"
b11011000000100010 7"
b11011000000100010 l"
b11011000000100010 p"
b100110 9"
b100110 j"
b100110 o"
b100110 :"
b100110 i"
b100110 n"
b111 2$
b111 6$
b100010000001110110011 e
b100010000001110110011 J#
b100010000001110110011 T#
b11 }"
b11 D
b1011101101101000100100 C
b1011101101101000100100 ="
b1011101101101000100100 $#
b1011101101101000100100 #$
b1011101101101000100100 )$
b10000 V
b10000 *#
b10000 n#
b10000 5#
b100010010011 2
b100010010011 3
b100010010011 m
b100010010011 0#
b100010010011 2#
b100010010011 [#
b100010010011 i#
b10001100011001001000110011 d
b10001100011001001000110011 '#
b10001100011001001000110011 3#
b10001100011001001000110011 \#
b10001100011001001000110011 j#
b1100 G
b1100 .#
b1100 p#
b1100 7#
b10 ;
b10 {
b10 4"
b10001000011010001010110011 f
b10001000011010001010110011 t
b10001000011010001010110011 &#
b10001000011010001010110011 )"
b10000 I
b10000 y
b10000 -#
b10000 =#
b10000 @#
b10000 1"
b10010 q
b10010 s
b10010 ;#
b10010 D#
b10010 '"
b10001000011011001100110011 g
b10001000011011001100110011 %"
b10001000011011001100110011 G"
b10001000011011001100110011 g"
b10001000011011001100110011 G#
b10001000011011001100110011 M#
b10100 J
b10100 ~
b10100 >"
b10100 x"
b10100 H#
b10100 N#
b11100 &
b11100 K
b11100 S#
b11100 Y#
b11000 H
b11000 I#
b11000 Q#
b11000 X#
b11000 Z#
b100010000001110110011 ,
b100010000001110110011 h
b100010000001110110011 R#
b100010000001110110011 5$
b100010000001110110011 9$
b1000 F
b1000 q#
b1000 z#
b10001000001000000110110011 c
b10001000001000000110110011 F"
b10001000001000000110110011 k#
b10001000001000000110110011 w#
b1100 U
b1100 o#
b1100 "$
b1100 &$
b1100 y#
b1011101101101000100100 l
b1011101101101000100100 u#
b1011101101101000100100 v#
b1011101101101000100100 }#
b1011101101101000100100 $$
1!
#90000
0!
#95000
b10111011100 M
b10111011100 !"
b10111011100 A"
b10111011100 {"
b0 E#
b10111011100 R
b10111011100 ""
b10111011100 6"
b10111011100 C"
b10111011100 N"
b10111011100 |"
b10111011100 "#
b0 r
b0 &"
b0 L"
b0 _"
b0 c"
b1 I"
b1 v"
b1 z"
b11111111111 O
b11111111111 #"
b11111111111 B"
b11111111111 w"
b11111111111 o
b11111111111 <#
b11111111111 C#
b0 p
b0 :#
b0 B#
b1000 2$
b1000 6$
b0 M"
b1 <
b1 |
b1 ;"
b10 >
b10 }
b10 <"
b1 !#
b10 ~"
b0 Q"
b0 a"
b0 P"
b0 `"
b100010000000000000000 8"
b100010000000000000000 k"
b100010000000000000000 q"
b10000100000000000 7"
b10000100000000000 l"
b10000100000000000 p"
b100000000110 9"
b100000000110 j"
b100000000110 o"
b111 :"
b111 i"
b111 n"
b1 J"
b1 h"
b1 m"
b11111111111 D"
b11111111111 O"
b11111111111 y"
b11111111111 ##
b11000 W
b11000 /#
b11000 >#
b11000 A#
b0 b#
b0 *$
b0 .$
b10 d#
b101 E
b100 }"
b100 D
b100010010011 C
b100010010011 ="
b100010010011 $#
b100010010011 #$
b100010010011 )$
bx e
bx J#
bx T#
b100000 &
b100000 K
b100000 S#
b100000 Y#
b11100 H
b11100 I#
b11100 Q#
b11100 X#
b11100 Z#
b100010000001110110011 g
b100010000001110110011 %"
b100010000001110110011 G"
b100010000001110110011 g"
b100010000001110110011 G#
b100010000001110110011 M#
b11000 J
b11000 ~
b11000 >"
b11000 x"
b11000 H#
b11000 N#
b10001000011011001100110011 f
b10001000011011001100110011 t
b10001000011011001100110011 &#
b10001000011011001100110011 )"
b10100 I
b10100 y
b10100 -#
b10100 =#
b10100 @#
b10100 1"
b11111111111 Q
b11111111111 w
b11111111111 +#
b11111111111 /"
b11111111111 L
b11111111111 x
b11111111111 0"
b10011 q
b10011 s
b10011 ;#
b10011 D#
b10011 '"
b10100 V
b10100 *#
b10100 n#
b10100 5#
b0 2
b0 3
b0 m
b0 0#
b0 2#
b0 [#
b0 i#
b10001000011010001010110011 d
b10001000011010001010110011 '#
b10001000011010001010110011 3#
b10001000011010001010110011 \#
b10001000011010001010110011 j#
b10000 G
b10000 .#
b10000 p#
b10000 7#
b1100 F
b1100 q#
b1100 z#
b10001100011001001000110011 c
b10001100011001001000110011 F"
b10001100011001001000110011 k#
b10001100011001001000110011 w#
b10000 U
b10000 o#
b10000 "$
b10000 &$
b10000 y#
b100010010011 l
b100010010011 u#
b100010010011 v#
b100010010011 }#
b100010010011 $$
bx ,
bx h
bx R#
bx 5$
bx 9$
1!
#100000
0!
#105000
bx M
bx !"
bx A"
bx {"
bx O
bx #"
bx B"
bx w"
b10111011100 o
b10111011100 <#
b10111011100 C#
b11111111111 p
b11111111111 :#
b11111111111 B#
bx R
bx ""
bx 6"
bx C"
bx N"
bx |"
bx "#
bx D"
bx O"
bx y"
bx ##
xb"
0B
0T"
bx I"
bx v"
bx z"
b11 d#
b110 E
b11100 W
b11100 /#
b11100 >#
b11100 A#
b110111011011 n
b110111011011 1#
b110111011011 ?#
b110111011011 F#
b110111011011 P#
b110111011011 W#
bx M"
bx <
bx |
bx ;"
bx >
bx }
bx <"
bx !#
bx ~"
bx Q"
bx a"
bx P"
bx `"
bx R"
bx f"
bx000000000000 8"
bx000000000000 k"
bx000000000000 q"
bx0 7"
bx0 l"
bx0 p"
bx0 9"
bx0 j"
bx0 o"
bx :"
bx i"
bx n"
bx J"
bx h"
bx m"
b1001 2$
b1001 6$
b101 }"
b101 D
b0 C
b0 ="
b0 $#
b0 #$
b0 )$
b11000 V
b11000 *#
b11000 n#
b11000 5#
b10001000011011001100110011 d
b10001000011011001100110011 '#
b10001000011011001100110011 3#
b10001000011011001100110011 \#
b10001000011011001100110011 j#
b10100 G
b10100 .#
b10100 p#
b10100 7#
b11111111111 P
b11111111111 ,#
b11111111111 ]#
b11111111111 c#
b11111111111 6#
b1 ;
b1 {
b1 4"
b10 =
b10 z
b10 3"
b100010000001110110011 f
b100010000001110110011 t
b100010000001110110011 &#
b100010000001110110011 )"
b11000 I
b11000 y
b11000 -#
b11000 =#
b11000 @#
b11000 1"
b10111011100 Q
b10111011100 w
b10111011100 +#
b10111011100 /"
b10111011100 L
b10111011100 x
b10111011100 0"
b11111111111 N
b11111111111 v
b11111111111 ."
b0 q
b0 s
b0 ;#
b0 D#
b0 '"
bx g
bx %"
bx G"
bx g"
bx G#
bx M#
b11100 J
b11100 ~
b11100 >"
b11100 x"
b11100 H#
b11100 N#
b100100 &
b100100 K
b100100 S#
b100100 Y#
b100000 H
b100000 I#
b100000 Q#
b100000 X#
b100000 Z#
b10000 F
b10000 q#
b10000 z#
b10001000011010001010110011 c
b10001000011010001010110011 F"
b10001000011010001010110011 k#
b10001000011010001010110011 w#
b10100 U
b10100 o#
b10100 "$
b10100 &$
b10100 y#
b0 l
b0 u#
b0 v#
b0 }#
b0 $$
1!
#110000
0!
#115000
bx n
bx 1#
bx ?#
bx F#
bx P#
bx W#
b1010 2$
b1010 6$
bx o
bx <#
bx C#
bx p
bx :#
bx B#
b100000 W
b100000 /#
b100000 >#
b100000 A#
b11 b#
b1110110 *$
b1110110 .$
b0 d#
b111 E
b110 }"
b110 D
b101000 &
b101000 K
b101000 S#
b101000 Y#
b100100 H
b100100 I#
b100100 Q#
b100100 X#
b100100 Z#
b100000 J
b100000 ~
b100000 >"
b100000 x"
b100000 H#
b100000 N#
bx ;
bx {
bx 4"
bx =
bx z
bx 3"
0A
02"
bx f
bx t
bx &#
bx )"
b11100 I
b11100 y
b11100 -#
b11100 =#
b11100 @#
b11100 1"
bx Q
bx w
bx +#
bx /"
bx L
bx x
bx 0"
bx N
bx v
bx ."
b11100 V
b11100 *#
b11100 n#
b11100 5#
b110111011011 2
b110111011011 3
b110111011011 m
b110111011011 0#
b110111011011 2#
b110111011011 [#
b110111011011 i#
b100010000001110110011 d
b100010000001110110011 '#
b100010000001110110011 3#
b100010000001110110011 \#
b100010000001110110011 j#
b11000 G
b11000 .#
b11000 p#
b11000 7#
b10111011100 P
b10111011100 ,#
b10111011100 ]#
b10111011100 c#
b10111011100 6#
b10100 F
b10100 q#
b10100 z#
b10001000011011001100110011 c
b10001000011011001100110011 F"
b10001000011011001100110011 k#
b10001000011011001100110011 w#
b11000 U
b11000 o#
b11000 "$
b11000 &$
b11000 y#
1!
#120000
0!
#125000
bx b#
bx *$
bx .$
bx d#
bx E
b100100 W
b100100 /#
b100100 >#
b100100 A#
b1011 2$
b1011 6$
b111 }"
b111 D
b110111011011 C
b110111011011 ="
b110111011011 $#
b110111011011 #$
b110111011011 )$
0@
08#
b100000 V
b100000 *#
b100000 n#
b100000 5#
bx 2
bx 3
bx m
bx 0#
bx 2#
bx [#
bx i#
bx d
bx '#
bx 3#
bx \#
bx j#
b11100 G
b11100 .#
b11100 p#
b11100 7#
bx P
bx ,#
bx ]#
bx c#
bx 6#
b100000 I
b100000 y
b100000 -#
b100000 =#
b100000 @#
b100000 1"
b100100 J
b100100 ~
b100100 >"
b100100 x"
b100100 H#
b100100 N#
b101100 &
b101100 K
b101100 S#
b101100 Y#
b101000 H
b101000 I#
b101000 Q#
b101000 X#
b101000 Z#
b11000 F
b11000 q#
b11000 z#
b100010000001110110011 c
b100010000001110110011 F"
b100010000001110110011 k#
b100010000001110110011 w#
b11100 U
b11100 o#
b11100 "$
b11100 &$
b11100 y#
b110111011011 l
b110111011011 u#
b110111011011 v#
b110111011011 }#
b110111011011 $$
1!
#130000
0!
#135000
b1100 2$
b1100 6$
b101000 W
b101000 /#
b101000 >#
b101000 A#
bx }"
bx D
bx C
bx ="
bx $#
bx #$
bx )$
b110000 &
b110000 K
b110000 S#
b110000 Y#
b101100 H
b101100 I#
b101100 Q#
b101100 X#
b101100 Z#
b101000 J
b101000 ~
b101000 >"
b101000 x"
b101000 H#
b101000 N#
b100100 I
b100100 y
b100100 -#
b100100 =#
b100100 @#
b100100 1"
b100100 V
b100100 *#
b100100 n#
b100100 5#
b100000 G
b100000 .#
b100000 p#
b100000 7#
b11100 F
b11100 q#
b11100 z#
0?
0{#
bx c
bx F"
bx k#
bx w#
b100000 U
b100000 o#
b100000 "$
b100000 &$
b100000 y#
bx l
bx u#
bx v#
bx }#
bx $$
1!
#140000
0!
#145000
b101100 W
b101100 /#
b101100 >#
b101100 A#
b1101 2$
b1101 6$
b101000 V
b101000 *#
b101000 n#
b101000 5#
b100100 G
b100100 .#
b100100 p#
b100100 7#
b101000 I
b101000 y
b101000 -#
b101000 =#
b101000 @#
b101000 1"
b101100 J
b101100 ~
b101100 >"
b101100 x"
b101100 H#
b101100 N#
b110100 &
b110100 K
b110100 S#
b110100 Y#
b110000 H
b110000 I#
b110000 Q#
b110000 X#
b110000 Z#
b100000 F
b100000 q#
b100000 z#
b100100 U
b100100 o#
b100100 "$
b100100 &$
b100100 y#
1!
#150000
0!
#155000
b1110 2$
b1110 6$
b110000 W
b110000 /#
b110000 >#
b110000 A#
b111000 &
b111000 K
b111000 S#
b111000 Y#
b110100 H
b110100 I#
b110100 Q#
b110100 X#
b110100 Z#
b110000 J
b110000 ~
b110000 >"
b110000 x"
b110000 H#
b110000 N#
b101100 I
b101100 y
b101100 -#
b101100 =#
b101100 @#
b101100 1"
b101100 V
b101100 *#
b101100 n#
b101100 5#
b101000 G
b101000 .#
b101000 p#
b101000 7#
b100100 F
b100100 q#
b100100 z#
b101000 U
b101000 o#
b101000 "$
b101000 &$
b101000 y#
1!
#160000
0!
